/* ===================== ГЛОБАЛЬНЕ СИДАННЯ СТИЛІВ */
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin-top: 0;
  margin-bottom: 0;
}

ul,
ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 0;
}

body {
  font-family: sans-serif;
  line-height: 1.5;
  color: #d75a00;
}
.box {
  box-sizing: border-box;
  width: 150px;
  height: 150px;

  border: 5px solid #f44336;
  padding: 30px;
  margin-bottom: 30px;
  background-color: #ffeb3b;
}

.text {
  padding-top: 20px;
  padding-left: 80px;
  padding-bottom: 15px;

  background-color: #eafac7;
  border: 2px dashed #212121;
  margin-bottom: 30px;
}
/* MARGIN */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  line-height: 1.5;
  color: #212121;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

.post {
  padding: 20px;

  max-width: 400px;
  background-color: #fff;
  border: 2px dashed #2a2a2a;
}

.post-thumb {
  margin-bottom: 30px;
  border: 2px dashed tomato;
}

.post-heading {
  margin-top: 0;
  margin-bottom: 20px;

  border: 2px dashed teal;
}

.post-text {
  margin-bottom: 0;
  margin-top: 0;

  border: 2px dashed blue;
}

/* ===================== ГЛОБАЛЬНЕ СИДАННЯ СТИЛІВ */
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin-top: 0;
  margin-bottom: 0;
}

ul,
ol {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 0;
}

/* Обнулення маржина body вже є певним «стандартом» сучасної розробки, то ж нормалізатор modern-normalize містить цей крок. Тому, якщо на вашій веб-сторінці застосовується нормалізатор,, обнуляти маржин body у своєму коді не потрібно. */

/* =========BORDER============= */

.box-1 {
  width: 300px;
  height: 300px;
  border: 5px dotted #d75a00;
}

/* ==========border-*=================== */
/*Також є властивості, що окремо задають значення рамки. Їх можна застосовувати в якості альтернативи властивості border, або щоб при зміні лиш одного значення рамки не дублювати інші властивості.


border-width: значення;
border-style: значення;
border-color: значення; */

.box-1:hover {
  border-color: aqua;
}

/* Індивідуальні рамки */

.box-1 {
  width: 200px;
  height: 200px;

  border-top: 1px solid blue;
  border-right: 5px dotted black;
  border-bottom: 4px double palevioletred;
  border-left: 9px dashed green;
}
/* ============Заокруглена рамка================ */
/* body {
  padding: 10px;
  display: flex;
  flex-direction: column;
  gap: 10px;
} */

.box-2 {
  width: 280px;
  height: 160px;
  border-radius: 10px;
  background-color: #f44336;
  margin-top: 30px;
}

.box-3 {
  width: 200px;
  height: 200px;
  border-radius: 20%;
  background-color: #2196f3;
  margin-top: 30px;
}

.box-4 {
  width: 240px;
  height: 240px;
  border-radius: 50%;
  background-color: #4caf50;
  margin-top: 30px;
}

/* individual border corner rounding */
/*  
border-top-left-radius:
border-top-right-radius: 
border-bottom-right-radius: 
border-bottom-left-radius:*/

/* ===============Заокруглене зображення====================== */
* {
  box-sizing: border-box;
}

img {
  display: block;
  max-width: 100%;
}

.thumb {
  border: 10px solid green;
  border-radius: 50px;
  width: 480px;

  overflow: hidden;
}

/*       <!-- Властивість overflow -->

<!--overflow: visible | hidden | scroll | auto  --> 

visible - by default
hidden - ховає текст. Ніколи не задавай текстовому блоку властивість "height"
scroll - скролить приховану інфу з двома скролбарами
Auto - скролить з потрібним скролбаром */

/* Типи елементів */
/* DISPLAY є блокові(block) та рядкові (inline)*/
/* Рядкові елементи призначені для виділення та оформлення текстового контенту. Наприклад посилань кнопок, зображень тощо.
Блокові елементи використовуються для розмітки текстових контейнерів (заголовків, списків, абзаців) і великих смислових розділів (секцій, шапки, підвалу). */
/* Блокові елементи можуть бути візуально представлені, як прямокутні області, що йдуть одна за одною зверху вниз.
Для них задано властивість display: block. 
Вони займають всю доступну ширину рядка всередині батьківського елемента.
Їхня висота визначається вмістом, якщо явно не задана у властивості height.
Вони завжди починаються з нового рядка, тому кілька сусідніх блокових елементів розташовані вертикально один під одним.
Їм можна задавати будь-які властивості геометрії елемента: ширину, висоту, падінги, рамки та маржини.
Переважна більшість елементів – блокові. Наприклад <h1>, <p>, <section>, <ul>, <li>, <div>, <header> тощо.*/

/* +++++++++++++++++++++++++++++++++++++Фіксована ширина++++++++++++++++++++++++++++++++++++

Навіть якщо ширину блокових елементів задано явно, елементи все одно розташовуватимуться вертикально один під одним. Усе вільне місце в рядку за замовчуванням займає автоматичний правий відступ (margin-right) елемента. */
body {
  background-color: #f9f9fd;
}

.box {
  /* width: 240px; граємось з шириною блока */
  width: 1000px;
  /* width: 70%; граємось з шириною блока */
  height: 80px;
}

.indigo {
  background-color: #3f51b5;
}

.green {
  background-color: #4caf50;
}

.amber {
  background-color: #ffc107;
}

/* Колапсування вертикальних маржинів */
.box-6 {
  width: 200px;
  height: 100px;
}

.top {
  margin-bottom: 10px;
  background-color: teal;
}

.bottom {
  margin-top: 20px;
  background-color: palevioletred;
}

/* ===============================Горизонтальне центрування блокових елементів ==========================================*/
/* За замовчуванням блоковий елемент має автоматичний правий маржин, який займає все вільне місце в рядку. */
/* Якщо задати автоматичні лівий і правий маржини, вільний простір розподіляється між ними, і блочний елемент центрується. */
body {
  background-color: #f9f9fd;
  font-family: sans-serif;
  line-height: 1.5;
  color: #fff;
  font-size: 20px;
}

.parent {
  background-color: #3f51b5;
}

.child {
  max-width: 220px;
  /* max-width: 1000px; граємось з шириною блока*/
  margin: 0 auto;
  background-color: #4caf50;
  text-align: center;
}

.parent,
.child {
  padding: 20px;
  border-radius: 4px;
}
/* ====================== VIEWPORT======================= */
/* ==================Елемент-контейнер. Тег div ============================*/
/* <div class="container"></div> */
/* .container {
  width: 480px;
  margin: 0 auto;
  padding: 0 15px;
} */
body {
  font-family: sans-serif;
  line-height: 1.5;
  background-color: #f9f9fd;
  color: #212121;
}

.container {
  max-width: 480px;
  margin: 0 auto;
  padding: 0 15px;

  border: 1px dashed #2a2a2a;
}
/* риклад з кількома контейнерами */
body {
  margin: 0;
  font-family: sans-serif;
  line-height: 1.5;
  background-color: #f9f9fd;
}

h1,
h2,
p {
  margin: 0;
}

.container {
  max-width: 480px;
  margin: 0 auto;
  padding: 0 15px;

  outline: 2px dashed #f44336;
}

.page-header,
.page-footer,
.hero,
.about,
.features {
  padding-top: 20px;
  padding-bottom: 20px;
}

.page-header {
  background-color: #e0e0e0;
}

.hero {
  background-color: #4caf50;
}

.about {
  background-color: #ffc107;
}

.features {
  background-color: #2196f3;
}

.page-footer {
  background-color: #90a4ae;
}
/* ===================================Рядкові елементи (inline)====================================== */
